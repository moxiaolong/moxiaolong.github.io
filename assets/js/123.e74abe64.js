(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{436:function(i,t,a){"use strict";a.r(t);var n=a(8),r=Object(n.a)({},(function(){var i=this,t=i._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[t("h2",{attrs:{id:"chatgpt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chatgpt"}},[i._v("#")]),i._v(" chatGPT")]),i._v(" "),t("ol",[t("li",[t("p",[i._v('能指（Signifier）：在拉康的理论中，"能指"是指语言中的符号或标记，它是一个外在的声音、字母或符号，代表着某个概念或对象。然而，能指本身并不直接包含所表示的对象的真实本质或意义，它的意义是通过与其他能指的关系来建立的。例如，在英语中，单词"tree"（树）就是一个能指，它代表了一个具体的自然对象。')])]),i._v(" "),t("li",[t("p",[t("a",{attrs:{href:"/signifier"}},[i._v("所指")]),i._v('（Signified）："'),t("a",{attrs:{href:"/signifier"}},[i._v("所指")]),i._v('"是能指所代表的概念、对象或意义。它是与能指相对应的那个意义层面。在前面的例子中，"tree"（树）就是'),t("a",{attrs:{href:"/signifier"}},[i._v("所指")]),i._v("，它代表了实际的树这个概念。")])]),i._v(" "),t("li",[t("p",[t("a",{attrs:{href:"/signifying-chain"}},[i._v("能指链")]),i._v("（Signifying Chain）："),t("a",{attrs:{href:"/signifying-chain"}},[i._v("能指链")]),i._v("是多个能指按照一定的次序排列形成的序列。语言的运作是通过这种"),t("a",{attrs:{href:"/signifying-chain"}},[i._v("能指链")]),i._v("的方式进行的，一个能指引出另一个能指，从而形成一个连续的意义流。"),t("a",{attrs:{href:"/signifying-chain"}},[i._v("能指链")]),i._v("的关系是拉康理论中语言结构的基础，通过这种链式的关系，意义得以构建和传递。")])]),i._v(" "),t("li",[t("p",[i._v("能指漂移（Signifier Slippage）：能指漂移是拉康理论中一个重要的概念，它指的是在语言使用中能指的意义不稳定和变化的现象。在"),t("a",{attrs:{href:"/signifying-chain"}},[i._v("能指链")]),i._v("中，一个能指的意义可以因为它前后所连接的其他能指的关系而发生改变。这就是能指漂移，意思是能指的意义可以像漂移一样在语言结构中变化。")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);