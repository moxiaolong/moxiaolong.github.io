(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{345:function(s,t,n){"use strict";n.r(t);var a=n(8),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("并发编程允许开发人员使用多个执行路径解决问题，并且通常用于提高性能。并发并不意味着这些多路径是并行执行的；它意味着这些路径是无序执行的而不是顺序执行。从历史上看，使用由标准库或第三方开发人员提供的库可以促进这种类型的编程。")]),s._v(" "),t("p",[s._v("在 Go 中，语言本身和程序运行时内置了 Goroutines 和 channel 等并发特性，以减少或消除对库的需求。这很容易在 Go 中编写并发程序时造成错觉。在你决定使用并发时必须要谨慎，因为如果没有正确使用它那么就会带来一些稀罕的副作用或陷阱。如果你不小心，这些陷阱会产生复杂的问题和令人讨厌的 bug。")]),s._v(" "),t("p",[s._v("我在这篇文章中讨论的陷阱会与 Goroutine 泄漏有关。")]),s._v(" "),t("h2",{attrs:{id:"goroutines-泄露"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#goroutines-泄露"}},[s._v("#")]),s._v(" Goroutines 泄露")]),s._v(" "),t("p",[s._v("当涉及到内存管理时，Go 已经为您处理了许多细节。Go 在编译时使用"),t("a",{attrs:{href:"https://studygolang.com/articles/12444",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("逃逸分析")]),t("OutboundLink")],1),s._v(" 来决定值在内存中的位置。程序运行时通过使用"),t("a",{attrs:{href:"https://blog.golang.org/ismmkeynote",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("垃圾回收器")]),t("OutboundLink")],1),s._v(" 跟踪和管理堆分配。虽然在应用程序中创建"),t("a",{attrs:{href:"https://en.wikipedia.org/wiki/Memory_leak",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("内存泄漏")]),t("OutboundLink")],1),s._v(" 不是不可能的，但是这种可能性已经大大降低了。")]),s._v(" "),t("p",[s._v("一种常见的内存泄漏类型就是 Goroutines 泄漏。如果你开始了一个你认为最终会终止但是它永远不会终止的 Goroutine，那么它就会泄露了。它的生命周期为程序的生命周期，任何分配给 Goroutine 的内存都不能释放。所以在这里建议"),t("a",{attrs:{href:"https://dave.cheney.net/2016/12/22/never-start-a-goroutine-without-knowing-how-it-will-stop",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[s._v("“永远不要在不知道如何停止的情况下，就去开启一个 Goroutine ”")]),t("OutboundLink")],1),s._v("。")]),s._v(" "),t("p",[s._v("要弄明白基本的 Goroutine 泄漏，请查看以下代码：")]),s._v(" "),t("p",[t("strong",[s._v("清单 1")])]),s._v(" "),t("p",[s._v("https://play.golang.org/p/dsu3PARM24K")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// leak 是一个有 bug 程序。它启动了一个 goroutine")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阻塞接收 channel。一切都将不复存在")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 向那个 channel 发送数据，并且那个 channel 永远不会关闭")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 那个 goroutine 会被永远锁死")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("leak")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        val "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch\n        fmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"We received a value:"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("清单 1 中定义了一个名为 "),t("code",[s._v("leak")]),s._v(" 的函数。该函数在第 6 行创建一个 channel，该 channel 允许 Goroutines 传递整型数据。然后在第 8 行创建 Goroutine，它在第 9 行被阻塞，等待从 channel 中接收数据。当 Goroutine 正在等待时，"),t("code",[s._v("leak")]),s._v(" 函数会结束返回。此时，程序的其他任何部分都不能通过 channel 发送数据。这使得 Goroutine 在第 9 行被无限期的等待。第 10 行的 "),t("code",[s._v("fmt.Println")]),s._v(" 调用永远不会发生。")]),s._v(" "),t("p",[s._v("在本例中，Goroutine 泄漏可以在代码检查期间快速识别。不幸的是，生产代码中的 Goroutine 泄漏通常更难找到。我无法展示 Goroutine 泄漏可能发生的所有方式，但是这篇文章将详细说明你可能遇到的某种 Goroutine 泄漏。")]),s._v(" "),t("h2",{attrs:{id:"泄露-被遗忘的发送者"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#泄露-被遗忘的发送者"}},[s._v("#")]),s._v(" 泄露：被遗忘的发送者")]),s._v(" "),t("blockquote",[t("p",[s._v("对于这个泄漏示例，你将看到一个无限期阻塞的 Goroutine，等待在通道上发送一个值。")])]),s._v(" "),t("p",[s._v("我们要看的程序会根据一些搜索词找到一个记录，然后打印出来。这个程序是围绕一个叫做 "),t("code",[s._v("search")]),s._v(" 的函数构建的 :")]),s._v(" "),t("p",[t("strong",[s._v("清单 2")])]),s._v(" "),t("p",[s._v("https://play.golang.org/p/o6_eMjxMVFv")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// search 模拟成一个查找记录的函数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在查找记录时。执行此工作需要 200 ms。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("term "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("error")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Millisecond"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some value"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("清单 2 中第 3 行的 "),t("code",[s._v("search")]),s._v(" 函数是一个模拟实现，用于模拟长时间运行的操作，如数据库查询或 Web 调用。在这个例子中，硬编码需要 200 ms。")]),s._v(" "),t("p",[s._v("在清单 3 中程序调用 "),t("code",[s._v("search")]),s._v(" 函数，如下：")]),s._v(" "),t("p",[t("strong",[s._v("清单 3")])]),s._v(" "),t("p",[s._v("https://play.golang.org/p/o6_eMjxMVFv")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// process 函数是在该程序中搜索一条记录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 然后打印它")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("process")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("term "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("error")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    record"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("term"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" err "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" err\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   fmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Received:"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" record"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("在清单 3 中的第 3 行，定义了一个名为 "),t("code",[s._v("process")]),s._v(" 的函数，它接受一个表示搜索项的字符串参数。在第 4 行，"),t("code",[s._v("term")]),s._v(" 变量传递给 "),t("code",[s._v("serach")]),s._v(" 函数，该函数返回查找到的记录和错误。如果发生错误，则将错误返回到第 6 行的调用方。如果没有错误，则在第 9 行打印该记录。")]),s._v(" "),t("p",[s._v("对于某些应用程序来说，顺序调用 "),t("code",[s._v("search")]),s._v(" 函数时产生的延迟可能是无法接受的。假设不能使 "),t("code",[s._v("search")]),s._v(" 函数运行得更快，则可以将 "),t("code",[s._v("process")]),s._v(" 函数更改为不消耗 "),t("code",[s._v("search")]),s._v(" 所产生的总延迟成本。")]),s._v(" "),t("p",[s._v("为此，我们可以像下面清单 4 中那种使用 Goroutine，不幸的是，这第一次尝试是错误的，因为它造成了潜在的 Goroutine 泄漏。")]),s._v(" "),t("p",[t("strong",[s._v("清单 4")])]),s._v(" "),t("p",[s._v("https://play.golang.org/p/m0DHuchgX0A")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// serach 函数得到的返回值用 result 结构体来保存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过单个 channel 来传递这两个值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    record "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n    err    "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("error")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// process 函数是一个用来寻找记录的函数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 然后打印，如果超过 100 ms 就会失败 .")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("process")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("term "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("error")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个在 100 ms 内取消上下文的 context")]),s._v("\n     ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cancel "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("WithTimeout")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("context"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Background")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Millisecond"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cancel")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为 Goroutine 创建一个传递结果的 channel")]),s._v("\n     ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 启动一个 goroutine 来寻找记录，然后得到结果")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将返回值从 channel 中返回")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         record"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("search")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("term"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("record"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" err"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阻塞等待从 goroutine 接收值")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过 channel 和 context 来取消上下文操作")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ctx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Done")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" errors"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("New")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"search canceled"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("err "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("err\n         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n         fmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Received:"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("record"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br")])]),t("p",[s._v("在清单 4 中的第 13 行，重写 "),t("code",[s._v("process")]),s._v(" 函数以创建 "),t("code",[s._v("Context")]),s._v(" 来在 100 ms 内取消上下文。有关如何使用 "),t("code",[s._v("Context")]),s._v(" 的更多信息，请阅读 "),t("a",{attrs:{href:"https://blog.golang.org/context",target:"_blank",rel:"noopener noreferrer"}},[s._v("go 语言开发文档"),t("OutboundLink")],1),s._v(" 。")]),s._v(" "),t("p",[s._v("然后在第 17 行，程序创建一个无缓冲的 channel，允许 Goroutines 传递 "),t("code",[s._v("result")]),s._v(" 类型的数据。在第 21 到 24 行，定义了匿名函数，此处称为 Goroutine。此 Goroutine 调用 "),t("code",[s._v("search")]),s._v(" 函数并尝试通过第 23 行的 channel 发送其返回值。")]),s._v(" "),t("p",[s._v("当 Goroutine 正在执行其工作时，"),t("code",[s._v("process")]),s._v(" 函数执行第 28 行上的 "),t("code",[s._v("select")]),s._v(" 模块。该模块有两种情况，它们都是 channel 接收操作。")]),s._v(" "),t("p",[s._v("在第 29 行，有一个从 "),t("code",[s._v("ctx.Done()")]),s._v(" channel 接收的 "),t("code",[s._v("case")]),s._v("。如果上下文被取消（100 ms 持续时间到达），将执行此 "),t("code",[s._v("case")]),s._v("。如果执行此 "),t("code",[s._v("case")]),s._v("，则 "),t("code",[s._v("process")]),s._v(" 函数将返回错误，代表着取消了等待第 30 行的 "),t("code",[s._v("search")]),s._v("。")]),s._v(" "),t("p",[s._v("或者，第 31 行上的 "),t("code",[s._v("case")]),s._v(" 从 "),t("code",[s._v("ch")]),s._v(" channel 接收并将值分配给名为 "),t("code",[s._v("result")]),s._v(" 的变量。与前面在顺序实现中一样，程序在第 32 行和第 33 行检查和处理错误。如果没有错误，程序将在第 35 行打印记录，并返回 nil 以指示成功。")]),s._v(" "),t("p",[s._v("此重构设置了 "),t("code",[s._v("process")]),s._v(" 函数等待 "),t("code",[s._v("search")]),s._v(" 完成的最大持续时间。然而，这种实现也会造成潜在的 Goroutine 泄漏。想想代码中的 Goroutine 在做什么；在第 23 行，它通过 channel 发送。在此 channel 上发送将阻塞执行，直到另一个 Goroutine 准备接收值为止。在超时的情况下，接收方停止等待 Goroutine 的接收并继续工作。这将导致 Goroutine 永远阻塞，等待一个永远不会发生的接收器出现。这就是 Goroutine 泄露的时候。")]),s._v(" "),t("p",[s._v("修复：创造一些空间")]),s._v(" "),t("p",[s._v("解决此泄漏的最简单方法是将无缓冲 channel 更改为容量为 1 的缓冲通道。")]),s._v(" "),t("p",[t("strong",[s._v("清单 5")])]),s._v(" "),t("p",[s._v("https://play.golang.org/p/u3xtQ48G3qK")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 为 Goroutine 创建一个传递结果的 channel。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 给它容量，以至于发送接受不会阻塞。")]),s._v("\n   ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("现在在超时情况下，在接收器继续运行之后，搜索 Goroutine 将通过将结果值放入 channel 来完成其发送，然后它将返回。Goroutine 的内存以及 channel 的内存最终将会被收回。一切都会自然而然地发挥作用。")]),s._v(" "),t("p",[s._v("在 "),t("a",{attrs:{href:"https://www.ardanlabs.com/blog/2017/10/the-behavior-of-channels.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("channel 的行为"),t("OutboundLink")],1),s._v(" 中，William Kennedy 提供了几个关于 channel 行为的很好的例子，并提供了有关其使用的哲学。该文章“"),t("a",{attrs:{href:"https://www.ardanlabs.com/blog/2017/10/the-behavior-of-channels.html#signal-without-data-context",target:"_blank",rel:"noopener noreferrer"}},[s._v("清单 10"),t("OutboundLink")],1),s._v(" ”的最后一个示例显示了一个类似于此超时示例的程序。阅读该文章，获取有关何时使用缓冲 channel 以及适当的容量级别的更多建议。")]),s._v(" "),t("h2",{attrs:{id:"结论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[s._v("#")]),s._v(" 结论")]),s._v(" "),t("p",[s._v("Go 让启动 goroutines 变得简单，但我们有责任明智地使用它们。在这篇文章中，我展示了如何错误地使用 Goroutines 的一个例子。有许多方法可以创建 goroutine 泄漏以及使用并发时可能遇到的其他陷阱。在以后的文章中，我将提供更多 Goroutine 泄漏和其他并发陷阱的例子。现在我会给你这个建议 ; 任何时候你开始 Goroutine 你必须问自己：")]),s._v(" "),t("ul",[t("li",[s._v("什么时候会终止？")]),s._v(" "),t("li",[s._v("什么可以阻止它终止？")])]),s._v(" "),t("p",[s._v("*"),t("strong",[s._v("并发是一个有用的工具，但必须谨慎使用。*")])])])}),[],!1,null,null,null);t.default=e.exports}}]);