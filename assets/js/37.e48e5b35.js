(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{353:function(s,t,n){"use strict";n.r(t);var a=n(8),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("在上一篇文章"),t("a",{attrs:{href:"/pages/golang/go-chan"}},[s._v("《深入理解 go chan》")]),s._v("中，我们讲解了 "),t("code",[s._v("chan")]),s._v(" 相关的一些概念、原理等东西， 今天让我们再深入一下，读一下它的源码，看看底层实际上是怎么实现的。")]),s._v(" "),t("h2",{attrs:{id:"整体设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#整体设计"}},[s._v("#")]),s._v(" 整体设计")]),s._v(" "),t("p",[s._v("我们可以从以下三个角度看 "),t("code",[s._v("chan")]),s._v(" 的设计（源码位于 "),t("code",[s._v("runtime/chan.go")]),s._v("，结构体 "),t("code",[s._v("hchan")]),s._v(" 就是 "),t("code",[s._v("chan")]),s._v(" 的底层数据结构）：")]),s._v(" "),t("ul",[t("li",[s._v("存储："),t("code",[s._v("chan")]),s._v(" 里面的数据是通过一个"),t("strong",[s._v("环形队列")]),s._v("来存储的（实际上是一个数组，但是我们视作环形队列来操作。无缓冲 "),t("code",[s._v("chan")]),s._v(" 不用存储，会直接从 "),t("code",[s._v("sender")]),s._v(" 复制到 "),t("code",[s._v("receiver")]),s._v("）")]),s._v(" "),t("li",[s._v("发送：数据发送到 "),t("code",[s._v("chan")]),s._v(" 的时候，如果 "),t("code",[s._v("chan")]),s._v(" 满了，则会将发送数据的协程挂起，将其放入一个协程队列中，"),t("code",[s._v("chan")]),s._v(" 空闲的时候会唤醒这个协程队列。如果 "),t("code",[s._v("chan")]),s._v(" 没满，则"),t("strong",[s._v("发送队列")]),s._v("为空。")]),s._v(" "),t("li",[s._v("接收：从 "),t("code",[s._v("chan")]),s._v(" 中接收数据的时候，如果 "),t("code",[s._v("chan")]),s._v(" 是空的，则会将接收数据的协程挂起，将其放入一个协程队列中，当 "),t("code",[s._v("chan")]),s._v(" 有数据的时候会唤醒这个协程队列。如果 "),t("code",[s._v("chan")]),s._v(" 有数据，则"),t("strong",[s._v("接收队列")]),s._v("为空。")])]),s._v(" "),t("p",[s._v("文中一些比较关键的名词解释：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("sender")]),s._v(": 表示尝试写入 "),t("code",[s._v("chan")]),s._v(" 的 "),t("code",[s._v("goroutine")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("receiver")]),s._v(": 表示尝试从 "),t("code",[s._v("chan")]),s._v(" 读取数据的 "),t("code",[s._v("goroutine")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("sendq")]),s._v(" 是一个队列，存储那些尝试写入 "),t("code",[s._v("channel")]),s._v(" 但被阻塞的 "),t("code",[s._v("goroutine")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("recvq")]),s._v(" 是一个队列，存储那些尝试读取 "),t("code",[s._v("channel")]),s._v(" 但被阻塞的 "),t("code",[s._v("goroutine")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("g")]),s._v(" 表示一个协程。")]),s._v(" "),t("li",[t("code",[s._v("gopark")]),s._v(" 是将协程挂起的函数，协程状态："),t("code",[s._v("_Grunning")]),s._v(" => "),t("code",[s._v("_Gwaiting")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("goready")]),s._v(" 是将协程改为可运行状态的函数，协程状态: "),t("code",[s._v("_Gwaiting")]),s._v(" => "),t("code",[s._v("_Grunnable")]),s._v("。")])]),s._v(" "),t("p",[s._v("现在，假设我们有下面这样的一段代码，通过这段代码，我们可以大概看一下 "),t("code",[s._v("chan")]),s._v(" 的总体设计：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个缓冲区大小为 9 的 chan")]),s._v("\n   ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 往 chan 写入 [1,2,3,4,5,6,7]")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 1 从缓冲区移出来")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("现在，我们的 "),t("code",[s._v("chan")]),s._v(" 大概长得像下面这个样子，后面会详细展开将这个图中的所有元素：")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/go/chan-design/674c3d92e15b419996d4ebba8e144dactplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp",alt:"design.png"}})]),s._v(" "),t("blockquote",[t("p",[s._v("上图为了说明而在 recvq 和 sendq 都画了 3 个 G，但实际上 recvq 和 sendq 至少有一个为空。因为不可能有协程正在等待接收数据的时候，还有协程的数据因为发不出去数据而阻塞。")])]),s._v(" "),t("h2",{attrs:{id:"数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[s._v("#")]),s._v(" 数据结构")]),s._v(" "),t("p",[s._v("在底层，go 是使用 "),t("code",[s._v("hchan")]),s._v(" 这个结构体来表示 "),t("code",[s._v("chan")]),s._v(" 的，下面是结构体的定义：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" hchan "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   qcount   "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 缓冲区（环形队列）元素个数")]),s._v("\n   dataqsiz "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 缓冲区的大小（最多可容纳的元素个数）")]),s._v("\n   buf      unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指向缓冲区入口的指针（从 buf 开始 qcount * elemsize 大小的内存就是缓冲区所用的内存）")]),s._v("\n   elemsize "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint16")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 对应类型元素的大小（主要用以计算第 i 个元素的内存地址）")]),s._v("\n   closed   "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint32")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 是否已经关闭（0-未关闭，1-已关闭）")]),s._v("\n   elemtype "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("_type         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 的元素类型")]),s._v("\n   sendx    "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 发送操作处理到的位置")]),s._v("\n   recvx    "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint")]),s._v("           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 接收操作处理到的位置")]),s._v("\n   recvq    waitq          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等待接收数据的协程队列（双向链表）")]),s._v("\n   sendq    waitq          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等待发送数据的协程队列（双向链表）")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 锁")]),s._v("\n   lock mutex\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[t("code",[s._v("waitq")]),s._v(" 的数据结构如下：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" waitq "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   first "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("sudog\n   last  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("sudog\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("code",[s._v("waitq")]),s._v(" 用来保存阻塞在等待或接收数据的协程列表（是一个双向链表），在解除阻塞的时候，需要唤醒这两个队列中的数据。")]),s._v(" "),t("h3",{attrs:{id:"对应上图各字段详细说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对应上图各字段详细说明"}},[s._v("#")]),s._v(" 对应上图各字段详细说明")]),s._v(" "),t("p",[t("code",[s._v("hchan")]),s._v("，对于 "),t("code",[s._v("hchan")]),s._v(" 这个结构体，我们知道，在 go 里面，结构体字段是存储在一段连续的内存上的（可以看看"),t("a",{attrs:{href:"https://juejin.cn/post/7174963221294481445",target:"_blank",rel:"noopener noreferrer"}},[s._v("《深入理解 go unsafe》"),t("OutboundLink")],1),s._v("），所以图中用了连续的一段单元格表示。")]),s._v(" "),t("p",[s._v("下面是各字段说明：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("qcount")]),s._v(": 写入 "),t("code",[s._v("chan")]),s._v(" 缓冲区元素个数。我们的代码往 "),t("code",[s._v("chan")]),s._v(" 中存入了 "),t("code",[s._v("7")]),s._v(" 个数，然后从中取出了一个数，最终还剩 "),t("code",[s._v("6")]),s._v(" 个，因此 "),t("code",[s._v("qcount")]),s._v(" 是 "),t("code",[s._v("6")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("dataqsiz")]),s._v(": "),t("code",[s._v("hchan")]),s._v(" 缓冲区的长度。它在内存中是连续的一段内存，是一个数组，是通过 "),t("code",[s._v("make")]),s._v(" 创建的时候传入的，是 "),t("code",[s._v("9")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("buf")]),s._v("："),t("code",[s._v("hchan")]),s._v(" 缓冲区指针。指向了一个数组，这个数组就是用来保存发送到 "),t("code",[s._v("chan")]),s._v(" 的数据的。")]),s._v(" "),t("li",[t("code",[s._v("sendx")]),s._v("、"),t("code",[s._v("recvx")]),s._v("：写、读操作的下标。指向了 "),t("code",[s._v("buf")]),s._v(" 指向的数组中的下标，"),t("code",[s._v("sendx")]),s._v(" 是下一个发送操作保存的下标，"),t("code",[s._v("recvx")]),s._v(" 是下一个接收操作的下标。")]),s._v(" "),t("li",[t("code",[s._v("recvq")]),s._v("、"),t("code",[s._v("sendq")]),s._v(": 阻塞在 "),t("code",[s._v("chan")]),s._v(" 读写上的协程列表。底层是双向链表，链表的元素是 "),t("code",[s._v("sudog")]),s._v("（"),t("code",[s._v("sudog")]),s._v(" 是一个对 "),t("code",[s._v("g")]),s._v(" 的封装），我们可以简单地理解为 "),t("code",[s._v("recvq")]),s._v(" 和 "),t("code",[s._v("sendq")]),s._v(" 的元素就是 "),t("code",[s._v("g")]),s._v("（协程）。")])]),s._v(" "),t("h3",{attrs:{id:"g-和-sudog-是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#g-和-sudog-是什么"}},[s._v("#")]),s._v(" g 和 sudog 是什么？")]),s._v(" "),t("p",[s._v("上面提到了 "),t("code",[s._v("g")]),s._v(" 和 "),t("code",[s._v("sudog")]),s._v("，"),t("code",[s._v("g")]),s._v(" 是底层用来表示协程的结构体，而 "),t("code",[s._v("sudog")]),s._v(" 是对 "),t("code",[s._v("g")]),s._v(" 的封装，记录了一些额外的信息，比如关联的 "),t("code",[s._v("hchan")]),s._v("。")]),s._v(" "),t("p",[s._v("在 go 里面，协程调度的模型是 "),t("code",[s._v("GMP")]),s._v(" 模型，"),t("code",[s._v("G")]),s._v(" 代表协程、"),t("code",[s._v("M")]),s._v(" 代表线程、"),t("code",[s._v("P")]),s._v(" 表示协程调度器。我上图里面的 "),t("code",[s._v("G")]),s._v(" 就是代表协程（当然，实际上是 "),t("code",[s._v("sudog")]),s._v("）。 还有一个下面会提到的就是 "),t("code",[s._v("g0")]),s._v("，"),t("code",[s._v("g0")]),s._v(" 表示 "),t("code",[s._v("P")]),s._v(" 上启动的第一个协程。")]),s._v(" "),t("p",[t("code",[s._v("GMP")]),s._v(" 模型是另外一个庞大的话题了，大家可以自行去了解一下，对理解本文也很有好处。因为在 "),t("code",[s._v("chan")]),s._v(" 阻塞的时候实际上也是一个协程调度的过程。 具体来说，就是从 "),t("code",[s._v("g")]),s._v(" 的栈切换到 "),t("code",[s._v("g0")]),s._v(" 的栈，然后重新进行协程调度。这个时候 "),t("code",[s._v("g")]),s._v(" 因为从运行状态修改为了等待状态，所以在协程调度中不会将它调度来执行， 而是会去找其他可执行的协程来执行。")]),s._v(" "),t("h2",{attrs:{id:"创建-chan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建-chan"}},[s._v("#")]),s._v(" 创建 chan")]),s._v(" "),t("p",[s._v("我们的 "),t("code",[s._v("make(chan int, 9)")]),s._v(" 最终会调用 "),t("code",[s._v("makechan")]),s._v(" 方法：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chantype 是 chan 元素类型，size 是缓冲区大小")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("makechan")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("chantype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" size "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   elem "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// compiler checks this but be safe.")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 检查元素个数是否合法（不能超过 1<<16 个）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("size "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("throw")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"makechan: invalid channel element type"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断内存是否对齐")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" hchanSize"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v("maxAlign "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("align "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" maxAlign "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("throw")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"makechan: bad alignment"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mem 是 chan 缓冲区（环形队列）所需要的内存大小")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mem = 元素大小 * 元素个数")]),s._v("\n   mem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" overflow "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" math"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("MulUintptr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uintptr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" overflow "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" mem "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" maxAlloc"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("hchanSize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" size "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("panic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("plainError")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"makechan: size out of range"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义 hchan")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" mem "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 队列或者元素大小是 0（比如 make(chan int, 0)）")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 只需要分配 hchan 所需要的内存")]),s._v("\n      c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mallocgc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hchanSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ptrdata "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// elem 类型里面不包含指针")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分配的内存 = hchan 所需内存 + 缓冲区内存")]),s._v("\n      c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mallocgc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hchanSize"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("mem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 分配的是连续的一段内存，缓冲区内存在 hchan 后面")]),s._v("\n      c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("buf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Pointer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" hchanSize"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 元素类型里面包含指针")]),s._v("\n      c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("new")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// buf 需要另外分配内存")]),s._v("\n      c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("buf "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mallocgc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 单个元素的大小")]),s._v("\n   c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemsize "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uint16")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 元素类型")]),s._v("\n   c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" elem\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 缓冲区大小")]),s._v("\n   c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dataqsiz "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uint")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br")])]),t("p",[s._v("创建 "),t("code",[s._v("chan")]),s._v(" 的过程主要就是给 "),t("code",[s._v("hchan")]),s._v(" 分配内存的过程：")]),s._v(" "),t("ul",[t("li",[s._v("非缓冲 "),t("code",[s._v("chan")]),s._v("，只需要分配 "),t("code",[s._v("hchan")]),s._v(" 结构体所需要的内存，无需分配环形队列内存（数据会直接从 "),t("code",[s._v("sender")]),s._v(" 复制到 "),t("code",[s._v("receiver")]),s._v("）")]),s._v(" "),t("li",[s._v("缓冲 "),t("code",[s._v("chan")]),s._v("（不包含指针），分配 "),t("code",[s._v("hchan")]),s._v(" 所需要的内存和环形队列所需要的内存，其中 "),t("code",[s._v("buf")]),s._v(" 会紧挨着 "),t("code",[s._v("hchan")])]),s._v(" "),t("li",[s._v("缓冲 "),t("code",[s._v("chan")]),s._v("（含指针），"),t("code",[s._v("hchan")]),s._v(" 和环形队列所需要的内存单独进行分配")])]),s._v(" "),t("blockquote",[t("p",[s._v("对应到文章开头的图就是，底下的 "),t("code",[s._v("hchan")]),s._v(" 和 "),t("code",[s._v("buf")]),s._v(" 那两段内存。")])]),s._v(" "),t("h2",{attrs:{id:"发送数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发送数据"}},[s._v("#")]),s._v(" 发送数据")]),s._v(" "),t("h3",{attrs:{id:"语法糖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法糖"}},[s._v("#")]),s._v(" <- 语法糖")]),s._v(" "),t("p",[s._v("在"),t("a",{attrs:{href:"https://juejin.cn/post/7175028144812851237",target:"_blank",rel:"noopener noreferrer"}},[s._v("《深入理解 go chan》"),t("OutboundLink")],1),s._v("中，我们说也过，"),t("code",[s._v("<-")]),s._v(" 这个操作符号是一种语法糖， 实际上，"),t("code",[s._v("<-")]),s._v(" 会被编译成一个函数调用，对于发送操作而言，"),t("code",[s._v("c <- x")]),s._v(" 会编译为对下面的函数的调用：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// elem 是被发送到 chan 的数据的指针。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于 ch <- x，ch 对应参数中的 c，unsafe.Pointer(&x) 对应参数中的 elem。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chansend1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" elem unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chansend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getcallerpc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("另外，对于 "),t("code",[s._v("select")]),s._v(" 里面的调用，"),t("code",[s._v("chansend")]),s._v(" 会返回一个布尔值给 "),t("code",[s._v("select")]),s._v(" 用来判断是否是要选中当前 "),t("code",[s._v("case")]),s._v(" 分支。 如果 "),t("code",[s._v("chan")]),s._v(" 发送成功，则返回 "),t("code",[s._v("true")]),s._v("，则 "),t("code",[s._v("select")]),s._v(" 的那个分支得以执行。（"),t("code",[s._v("select...case")]),s._v(" 本质上是 "),t("code",[s._v("if...else")]),s._v("，返回 "),t("code",[s._v("false")]),s._v(" 表示判断失败。）")]),s._v(" "),t("h3",{attrs:{id:"chansend-第二个参数的含义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chansend-第二个参数的含义"}},[s._v("#")]),s._v(" chansend 第二个参数的含义")]),s._v(" "),t("p",[t("code",[s._v("chansend")]),s._v(" 第二个参数 "),t("code",[s._v("true")]),s._v(" 表示是一个阻塞调用，另外一种是在 "),t("code",[s._v("select")]),s._v(" 里面的发送操作，在 "),t("code",[s._v("select")]),s._v(" 中的操作是非阻塞的。")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 ch 满了，会阻塞")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 非阻塞")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("在 "),t("code",[s._v("select")]),s._v(" 中对 "),t("code",[s._v("chan")]),s._v(" 的读写是非阻塞的，不会导致当前协程阻塞，如果是因为 "),t("code",[s._v("chan")]),s._v(" 满或者空无法发送或接收， 则不会导致阻塞在 "),t("code",[s._v("case")]),s._v(" 的某一个分支上，还可以继续判断其他 "),t("code",[s._v("case")]),s._v(" 分支。")]),s._v(" "),t("p",[t("code",[s._v("select")]),s._v(" 中的 "),t("code",[s._v("send")]),s._v(" 实现：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// go 代码：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\tselect {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\tcase c <- v:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\t\t... foo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\tdefault:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\t\t... bar")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\t}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 实际效果：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\tif selectnbsend(c, v) {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\t\t... foo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\t} else {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\t\t... bar")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//\t}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select 里面往 chan 发送数据的分支，返回的 selected 表示当前的分支是否被选中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("selectnbsend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" elem unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selected "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chansend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getcallerpc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h3",{attrs:{id:"chansend-发送实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chansend-发送实现"}},[s._v("#")]),s._v(" chansend 发送实现")]),s._v(" "),t("ol",[t("li",[s._v("发送到 "),t("code",[s._v("nil chan")]),s._v("（"),t("code",[s._v("select")]),s._v(" 中发送不阻塞，其他情况阻塞）")])]),s._v(" "),t("p",[t("strong",[s._v("如果是在 "),t("code",[s._v("select")]),s._v(" 的 "),t("code",[s._v("case")]),s._v(" 里面发送，则不会阻塞，其他情况会导致当前 goroutine 挂起，永远阻塞")]),s._v("：")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/go/chan-design/3f10218c6bdf4af6ac5f8a787f447cb9tplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp",alt:"chansend_1.png"}})]),s._v(" "),t("p",[s._v("示例代码：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 下面的代码运行会报错：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送到 nil chan 会永久阻塞")]),s._v("\nch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这个发送失败，但是不会阻塞，可继续判断其他分支。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ol",[t("li",[s._v("发送到满了的 "),t("code",[s._v("chan")]),s._v("（"),t("code",[s._v("select")]),s._v(" 中发送不阻塞，其他情况阻塞）")])]),s._v(" "),t("p",[s._v("对于无缓冲而且又没有 "),t("code",[s._v("receiver")]),s._v("，或者是有缓冲但是缓冲满了的情况，发送也会阻塞（我们称其为 "),t("code",[s._v("full")]),s._v("，也就是满了，满了的 "),t("code",[s._v("chan")]),s._v(" 是放不下任何数据了的，所以就无法再往 "),t("code",[s._v("chan")]),s._v(" 发送数据了）：")]),s._v(" "),t("blockquote",[t("p",[s._v("receiver 表示等待从 chan 接收数据的协程。")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/go/chan-design/53c80503aeb548fb815e693be4a6f334tplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp",alt:"chansend_2.png"}})]),s._v(" "),t("p",[s._v("对于满了的 "),t("code",[s._v("chan")]),s._v("，什么时候可以再次发送呢？那就是"),t("strong",[s._v("有 "),t("code",[s._v("receiver")]),s._v(" 接收数据的时候")]),s._v("。"),t("code",[s._v("chan")]),s._v(" 之所以会满就是因为没有 "),t("code",[s._v("receiver")]),s._v("，也就是没有从 "),t("code",[s._v("chan")]),s._v(" 接收数据的协程。")]),s._v(" "),t("p",[s._v("A. 对于无缓冲的 "),t("code",[s._v("chan")]),s._v("，在满了的情况下，当有 "),t("code",[s._v("receiver")]),s._v(" 来读取数据的时候，数据会直接从 "),t("code",[s._v("sender")]),s._v(" 复制到 "),t("code",[s._v("receiver")]),s._v(" 中：")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/go/chan-design/ce9c982c63c5482dadf75f4a0ff2591dtplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp",alt:"chansend_3.png"}})]),s._v(" "),t("p",[s._v("B. 对于有缓冲，但是缓冲满了的情况（图中 "),t("code",[s._v("chan")]),s._v(" 满了，并且有两个 "),t("code",[s._v("g")]),s._v(" 正在等待写入 "),t("code",[s._v("chan")]),s._v("）：")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/go/chan-design/03f559e7a2ba4184a4d1d7fb2e09585btplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp",alt:"chansend_4.png"}})]),s._v(" "),t("p",[s._v("这个发送过程大概如下：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("receiver")]),s._v(" 从 "),t("code",[s._v("chan")]),s._v(" 中获取到 "),t("code",[s._v("chan")]),s._v(" 队头元素，然后 "),t("code",[s._v("chan")]),s._v(" 的队头元素出队。")]),s._v(" "),t("li",[s._v("发送队列 "),t("code",[s._v("sendq")]),s._v(" 对头元素出队，将其要发送的数据写入到 "),t("code",[s._v("chan")]),s._v(" 缓冲中。最后，"),t("code",[s._v("sendq")]),s._v(" 只剩下一个等待写入 "),t("code",[s._v("chan")]),s._v(" 的 "),t("code",[s._v("g")])])]),s._v(" "),t("p",[s._v("示例代码：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意：以下代码可能不能正常执行，只是为了描述问题。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 情况 2.A.")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 无缓冲的 chan")]),s._v("\n   ch1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阻塞")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不阻塞，但是不会执行这个分支")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ch1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 情况 2.B.")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有缓冲，缓冲区容量为 1")]),s._v("\n   ch2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1 写入之后，ch2 的缓冲区满了")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      ch2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阻塞，调用 gopark 挂起")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      ch2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阻塞")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不阻塞，但是不会执行这个分支")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" ch2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("ol",[t("li",[s._v("发送到有缓冲，但是缓冲还没满的 "),t("code",[s._v("chan")]),s._v("（不阻塞，发送成功）")])]),s._v(" "),t("p",[s._v("这种情况比较简单，就是将 "),t("code",[s._v("sender")]),s._v(" 要发送的数据写入到 "),t("code",[s._v("chan")]),s._v(" 缓冲区：")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/go/chan-design/366d182a0a5b4d7db758653cfe72cd6ftplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp",alt:"chansend_5.png"}})]),s._v(" "),t("p",[s._v("示例代码：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不阻塞，1 写入 chan 缓冲区")]),s._v("\nch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"chansend-源码解读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chansend-源码解读"}},[s._v("#")]),s._v(" chansend 源码解读")]),s._v(" "),t("p",[s._v("阻塞模式下，在发送的过程中，如果遇到无法发送成功的情况，会调用 "),t("code",[s._v("gopark")]),s._v(" 来将协程挂起，然后当前协程陷入阻塞状态。")]),s._v(" "),t("p",[s._v("非阻塞模式下（"),t("code",[s._v("select")]),s._v("），在发送过程中，任何无法发送的情况，都会直接返回 "),t("code",[s._v("false")]),s._v("，表示发送失败。")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数说明：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// c 表示 hchan 实例")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ep 表示要发送的数据所在的地址")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// block 是否是阻塞模式（select 语句的 case 里面的发送是非阻塞模式，其他情况是阻塞模式）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 非阻塞模式下，遇到无法发送的情况，会返回 false。阻塞模式下，遇到无法发送的情况，协程会挂起。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回值：表示是否发送成功。false 的时候，如果是 select 的 case，则表示没有选中这个 case。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chansend")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" block "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" callerpc "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uintptr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 情况 1：nil chan")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select 语句里面发送数据到 chan 的操作失败，直接返回 false，表示当前的 case 没有被选中。")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("block "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select 分支没有被选中")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阻塞模式，协程挂起")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gopark")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" waitReasonChanSendNilChan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" traceEvGoStop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("throw")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unreachable"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ... 其他代码...")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不获取锁的情况下快速失败。select 中 chan 满了的时候无法发送成功，直接返回 false，协程无需挂起。")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 场景：非阻塞模式、chan 未关闭、chan 已满（无缓冲且没有接收数据的协程、或者有缓冲但是缓冲区满）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("block "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("closed "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("full")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ... 其他代码...")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取锁")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 chan 已经关闭，则释放锁并 panic，不能往一个已经关闭的 chan 发送数据")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("closed "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("panic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("plainError")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"send on closed channel"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 情况 2.A，又或者是有缓冲但是缓冲区空，有一个正在等待接收数据的 receiver。")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果有协程在等待接收数据（说明 chan 缓冲区空、或者 chan 是无缓冲的）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 则直接将元素传递给这个接收数据的协程，这样就避免了 sender -> chan -> receiver 这个数据复制的过程，效率更高。")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回 true 表示 select 的分支可以执行（发送成功）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dequeue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 情况 3，发送到缓冲 chan，且 chan 未满")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没有协程在等待接收数据。")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 缓冲区还有空余，则将数据写入到 chan 的缓冲区")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("qcount "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dataqsiz "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取写入的地址")]),s._v("\n      qp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chanbuf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sendx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过内存复制的方式写入")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("typedmemmove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" qp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 写入的下标指向下一个位置")]),s._v("\n      c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sendx"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果到超出环形队列尾了，则指向第一个位置")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sendx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dataqsiz "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sendx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 里面的元素个数加上 1")]),s._v("\n      c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("qcount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放锁")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送成功，返回 true")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没有协程在接收数据，而且缓冲区满了。")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果是 select 语句里面的发送，则释放锁，返回 false")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("block "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发不出去，当前协程阻塞。")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阻塞模式下，缓冲区满了，需要将当前协程挂起。")]),s._v("\n   gp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   mysg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("acquireSudog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   mysg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("releasetime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" t0 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      mysg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("releasetime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   mysg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ep "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 要操作的元素指针")]),s._v("\n   mysg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("waitlink "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n   mysg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("g "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" gp           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sudog 上的 g 属性")]),s._v("\n   mysg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isSelect "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果是 select，上面已经返回了，因此这里是 false")]),s._v("\n   mysg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sudog 上的 c 属性")]),s._v("\n   gp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("waiting "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mysg     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// g 正在等待的 sudog")]),s._v("\n   gp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("param "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当通道操作唤醒被阻塞的 goroutine 时，它将 param 设置为指向已完成的阻塞操作的 sudog")]),s._v("\n   c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sendq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("enqueue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mysg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 sudog 放入发送队列")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在 chan 读写上阻塞的标志")]),s._v("\n   gp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parkingOnChan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Store")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最关键的一步：将当前协程挂起")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gopark")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("chanparkcommit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Pointer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" waitReasonChanSend"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" traceEvGoBlockSend"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 保证 ep 指向的地址不被垃圾回收器回收")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("KeepAlive")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...被唤醒了之后的一些收尾操作...")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数说明：c 是 chan 实例，sg 是等待接收数据的 g，ep 是被发送进 chan 的数据，unlockf 是释放锁的函数。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 空 chan 上发送，会直接发送给等待接收数据的协程。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ep 指向的值会被复制到 sg 中（ep -> sg，ep 是被发送的值，sg 是要接收数据的 g）。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 接收数据的协程会被唤醒。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通道 c 必须是空的并且获取了锁。send 会通过 unlockf 来释放锁。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sg 必须已从 c 中退出队列（从 recvq 这个接收队列中移除）。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ep 必须不能为 nil，同时指向堆或者调用者的栈。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sg 是接收队列上的 g。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("send")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("sudog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" unlockf "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" skip "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...其他代码...")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果没有忽略返回值，将值直接从 ep 复制到 sg 中")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sendDirect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   gp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("g\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放锁")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlockf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   gp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("param "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Pointer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("success "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("releasetime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("releasetime "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cputicks")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最关键的一步：唤醒等待队列中的那个接收到数据的 g")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//（也就是之前因为接收不到数据而被阻塞的那个 g）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("goready")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" skip"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参数：t 是 chan 的元素类型，sg 是接收数据的 g（协程），src 是被发送的数据的指针。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 场景：无缓冲 chan、有缓冲但是缓冲区没数据。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 作用：将数据直接从发送数据的协程复制到接收数据的协程。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sendDirect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("sudog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" src unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   dst "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("typeBitsBulkBarrier")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uintptr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dst"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uintptr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 ep 的值直接复制到 sg 中")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("memmove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dst"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// full 报告 c 上的发送是否会阻塞（即通道已满）。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("full")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// c.dataqsiz 是不可变的（创建 chan 后不会再去修改）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 因此在 chan 操作期间的任何时间读取都是安全的。")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dataqsiz "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果是非缓冲 chan，则看接收队列有没有数据，有则表明满了（没有正在发送的 g）")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("first "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果是缓冲 chan，只需要比较实际元素总数跟缓冲区容量即可")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("qcount "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dataqsiz\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br"),t("span",{staticClass:"line-number"},[s._v("141")]),t("br"),t("span",{staticClass:"line-number"},[s._v("142")]),t("br"),t("span",{staticClass:"line-number"},[s._v("143")]),t("br"),t("span",{staticClass:"line-number"},[s._v("144")]),t("br"),t("span",{staticClass:"line-number"},[s._v("145")]),t("br"),t("span",{staticClass:"line-number"},[s._v("146")]),t("br"),t("span",{staticClass:"line-number"},[s._v("147")]),t("br"),t("span",{staticClass:"line-number"},[s._v("148")]),t("br"),t("span",{staticClass:"line-number"},[s._v("149")]),t("br"),t("span",{staticClass:"line-number"},[s._v("150")]),t("br"),t("span",{staticClass:"line-number"},[s._v("151")]),t("br"),t("span",{staticClass:"line-number"},[s._v("152")]),t("br"),t("span",{staticClass:"line-number"},[s._v("153")]),t("br")])]),t("h2",{attrs:{id:"接收数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#接收数据"}},[s._v("#")]),s._v(" 接收数据")]),s._v(" "),t("h3",{attrs:{id:"语法糖-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法糖-2"}},[s._v("#")]),s._v(" <- 语法糖")]),s._v(" "),t("p",[s._v("在发送数据的那一节我们提到了，"),t("code",[s._v("ch <- x")]),s._v(" 编译之后，实际上是对 "),t("code",[s._v("chansend1")]),s._v(" 的函数调用。同样的，在接收数据的时候， "),t("code",[s._v("<-")]),s._v(" 这个操作符也会根据不同情况编译成不同的函数调用：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// elem 是用来保存从 c 中接收到的值的地址的指针")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// <- c 编译器处理之后实际上就是下面的这个函数调用。（从通道接收，但是忽略接收到的值）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chanrecv1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" elem unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chanrecv")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// received 表示是否是从 chan 中接收到的（如果 chan 关闭，则接收到的是零值，received 是 false）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// v, ok := <-c 编译之后的函数（从通道接收，第一个 v 对应 elem，第二个 ok 对应 received）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chanrecv2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" elem unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("received "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" received "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chanrecv")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select 里面的接收操作：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// case v, ok = <-c:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    ... foo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// default:")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    ... bar")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 实际 go 实现")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// if selected, ok = selectnbrecv(&v, c); selected {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    ... foo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// } else {")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    ... bar")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select 里面从 chan 接收数据的分支，返回的 selected 表示当前的分支是否被选中，received 表示是否有数据被接收到")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("selectnbrecv")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("elem unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selected"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" received "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chanrecv")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br")])]),t("p",[s._v("还需要再提醒一下的是："),t("code",[s._v("chan")]),s._v(" 关闭之后，并且 "),t("code",[s._v("chan")]),s._v(" 缓冲区所有数据被接收完之后，"),t("code",[s._v("received")]),s._v(" 才会是 "),t("code",[s._v("false")]),s._v("，并不是一关闭 "),t("code",[s._v("received")]),s._v(" 马上返回 "),t("code",[s._v("false")])]),s._v(" "),t("h3",{attrs:{id:"chanrecv-函数-block-参数的含义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chanrecv-函数-block-参数的含义"}},[s._v("#")]),s._v(" chanrecv 函数 block 参数的含义")]),s._v(" "),t("p",[s._v("跟 "),t("code",[s._v("chansend")]),s._v(" 中的 "),t("code",[s._v("block")]),s._v(" 参数的作用一样，用来判断是否是 "),t("code",[s._v("select")]),s._v(" 模式下的接收操作，如果是，则在需要阻塞的时候不会阻塞，取而代之的是直接返回。")]),s._v(" "),t("h3",{attrs:{id:"chanrecv-接收数据实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chanrecv-接收数据实现"}},[s._v("#")]),s._v(" chanrecv 接收数据实现")]),s._v(" "),t("ol",[t("li",[s._v("从 "),t("code",[s._v("nil chan")]),s._v(" 接收（"),t("code",[s._v("select")]),s._v(" 中接收不阻塞，其他情况阻塞）")])]),s._v(" "),t("p",[s._v("从 "),t("code",[s._v("nil chan")]),s._v(" 中读取的时候，如果是阻塞模式，会调用 "),t("code",[s._v("gopark")]),s._v(" 将协程阻塞起来。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/go/chan-design/de9c389de5a74c9a8327eca2a24a5ef0tplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp",alt:"chanrecv_1.png"}})]),s._v(" "),t("p",[s._v("示例代码：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ol",[t("li",[s._v("从空 "),t("code",[s._v("chan")]),s._v(" 接收（"),t("code",[s._v("select")]),s._v(" 中接收不阻塞，其他情况阻塞）")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/go/chan-design/8e2c3ef0d0ba4715a282b7e41c4f55e5tplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp",alt:"chanrecv_2.png"}})]),s._v(" "),t("blockquote",[t("p",[s._v("判断空的条件为：无缓冲并且没有等待发送数据的 g，或者有缓冲但是缓冲区无数据。")])]),s._v(" "),t("p",[s._v("示例代码：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 注意：以下代码执行不了，只是展示一下实际中对应的代码")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 情况 1，无缓冲的 chan，空的")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch1 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阻塞")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不阻塞，但是该分支不会执行")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 情况 2，有缓冲的 chan，空的")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阻塞")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不阻塞，但是该分支不会执行")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("ol",[t("li",[s._v("从缓冲区满的 "),t("code",[s._v("chan")]),s._v(" 接收（不会阻塞，这个时候 "),t("code",[s._v("sendq")]),s._v(" 一定不为空）")])]),s._v(" "),t("blockquote",[t("p",[s._v("这种情况不会阻塞，上面已经有图了，这里不再贴了。")])]),s._v(" "),t("ol",[t("li",[s._v("从缓冲区不满的 "),t("code",[s._v("chan")]),s._v(" 接收（不会阻塞）")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/go/chan-design/32c7b3d55668421180153d3427b369b9tplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp",alt:"chanrecv_3.png"}})]),s._v(" "),t("p",[s._v("示例代码：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从缓冲区没满的 chan 接收")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v("ch\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"chanrecv-源码解读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#chanrecv-源码解读"}},[s._v("#")]),s._v(" chanrecv 源码解读")]),s._v(" "),t("p",[t("code",[s._v("chanrecv")]),s._v(" 函数:")]),s._v(" "),t("ul",[t("li",[s._v("参数："),t("code",[s._v("c")]),s._v(" 是 "),t("code",[s._v("chan")]),s._v(" 实例，"),t("code",[s._v("ep")]),s._v(" 是用来接收数据的指针，"),t("code",[s._v("block")]),s._v(" 表示是否是阻塞模式。")]),s._v(" "),t("li",[s._v("返回值："),t("code",[s._v("selected")]),s._v(" 表示 "),t("code",[s._v("select")]),s._v(" 语句的 "),t("code",[s._v("case")]),s._v(" 是否被选中，"),t("code",[s._v("received")]),s._v(" 表示接收到的值是否有效。")]),s._v(" "),t("li",[s._v("功能：从 "),t("code",[s._v("c")]),s._v(" 这个通道接收数据，同时将接收到的数据写入到 "),t("code",[s._v("ep")]),s._v(" 里。")])]),s._v(" "),t("p",[s._v("概览：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("ep")]),s._v(" 可能是 "),t("code",[s._v("nil")]),s._v("，这意味着接收到的值被忽略了（对应 "),t("code",[s._v("<-c")]),s._v(" 这种形式的接收）。")]),s._v(" "),t("li",[s._v("如果是非阻塞模式，并且通道无数据，返回 "),t("code",[s._v("(false, false)")]),s._v("，也就是 "),t("code",[s._v("select")]),s._v(" 语句中的 "),t("code",[s._v("case")]),s._v(" 不会被选中。")]),s._v(" "),t("li",[s._v("否则，如果 "),t("code",[s._v("c")]),s._v(" 关闭了，会对 "),t("code",[s._v("ep")]),s._v(" 指向的地址设置零值，然后返回 "),t("code",[s._v("(true, false)")]),s._v("。如果是 "),t("code",[s._v("select")]),s._v(" 语句，意味被选中，")]),s._v(" "),t("li",[s._v("但是 "),t("code",[s._v("received")]),s._v(" 为 "),t("code",[s._v("false")]),s._v(" 表明返回的数不是通道关闭之前发送的。")]),s._v(" "),t("li",[s._v("否则，将从通道中获取到的值写入 "),t("code",[s._v("ep")]),s._v(" 指向的地址，并且返回 "),t("code",[s._v("(true, true)")])]),s._v(" "),t("li",[s._v("一个非 "),t("code",[s._v("nil")]),s._v(" 的 "),t("code",[s._v("ep")]),s._v(" 必须指向堆或者调用者的栈。")])]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从 c 读取数据，写入到 ep 指向的地址。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chanrecv")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" block "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("selected"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" received "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// c 是 nil chan")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select 里面的 case 不会被选中")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("block "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 阻塞模式时，协程挂起")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gopark")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" waitReasonChanReceiveNilChan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" traceEvGoStop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在实际执行的时候，如果其他协程都执行完了，只剩下这一个协程（又或者全部协程都是睡眠状态，并且无法被唤醒的那种），那么会报错：")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "fatal error: all goroutines are asleep - deadlock!"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("throw")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unreachable"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果是非阻塞模式（select），并且 c 是空的")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("block "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 未关闭，并且是空的，返回 false,false")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" atomic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Load")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("closed"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 已经关闭，并且 chan 是空的")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回一个零值")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" ep "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("typedmemclr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select 分支被选中，但是返回值是无效的，是一个零值")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取锁")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 已关闭")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("closed "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 已经关闭，同时也没有数据")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("qcount "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放锁")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" ep "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置零值")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("typedmemclr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select 的分支被选中，但是返回值无效")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 未关闭，并且有一个等待发送的元素（对应情况：chan 是满的或者无缓冲而且没有 receiver）")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果无缓冲：则将元素直接从 sender 复制到 receiver 中。")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 否则：意味着 c 的缓冲区满了，从环形队列中接收值，将 sg 需要发送的值添加到环形队列尾，")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//        实际上这个时候，队列头和队列尾都是同一个位置，因为队列满了。")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    只不过，队列头和队列尾指向的位置会发生变化（都加 1，然后对缓冲区长度取模）。")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sendq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dequeue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 找到一个 sender。")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果无缓冲，直接从 sender 复制到 receiver")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 否则，环形队列对头元素复制给 receiver，sender 要发送的元素复制进环形队列队尾。")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("recv")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select 分支被选中，接收成功，并且接收的值是有效的。")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 缓冲区有数据，并且缓冲区没满")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("qcount "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// qp 是被接收元素的地址")]),s._v("\n      qp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chanbuf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 qp 指向的值复制到 ep")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" ep "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("typedmemmove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" qp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 清空队列中 ep 的空间（设置为零值）")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("typedmemclr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" qp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 被接收的下标指向下一个元素")]),s._v("\n      c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvx"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 环形队列，回到开头")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dataqsiz "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 缓冲区长度减 1")]),s._v("\n      c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("qcount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放锁")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// select 分支被选中，并且接收的值是有效的。")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 缓冲区空的，并且是非阻塞（select）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("block "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放锁")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回 false,false")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 缓冲区空，并且是阻塞模式，同时没有等待发送的 g")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没有 sender，阻塞")]),s._v("\n   gp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   mysg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("acquireSudog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// c 的 recvq，也就是等待接收的队列，在队尾添加当前的 g")]),s._v("\n   c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("enqueue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mysg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// g 挂起，等待下一个发送数据的协程")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gopark")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("chanparkcommit"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Pointer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" waitReasonChanReceive"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" traceEvGoBlockRecv"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ... 被唤醒后的操作 ...")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" success\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// recv 处理缓冲区已满的 chan 的接收操作（或者无缓冲，这个函数处理这两种情况）。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有两部分：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  1. 等待发送数据的协程（sender），会将其要发送的数据放入 chan 中，然后这个协程会被唤醒")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  2. 被接收协程接收的值会写入到 ep 中")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于同步 chan（无缓冲 chan），两个值是同一个。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于异步 chan，接收者从 chan 的缓冲区获取数据，发送方的输入放入 chan 缓冲区。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通道 c 必须已满并锁定。recv 会使用 unlockf 来解锁 c。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sg 必须已经从 c 中移除（准确来说是 c.sendq）。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("recv")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("sudog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" unlockf "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" skip "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果无缓冲区")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dataqsiz "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 直接将 sender 的要发送的值复制到 ep")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" ep "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("recvDirect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 有缓冲区，但是缓冲区满了。")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从队列头获取元素，将要发送的值放入队列尾。（实际上操作的是同一个位置，因为环形队列满了）")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要获取的值的指针地址")]),s._v("\n      qp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chanbuf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果需要接收值，则将 qp 复制到 ep（没有忽略返回值）")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" ep "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("typedmemmove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ep"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" qp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将要发送的值写入到 qp（sendq 对头元素要发送的值写入到 qp，也就是 chan 刚刚空出来的位置）")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("typedmemmove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" qp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 队列头、尾指针移动")]),s._v("\n      c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvx"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dataqsiz "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sendx "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// c.sendx = (c.sendx+1) % c.dataqsiz")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n   gp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("g\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放锁")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlockf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 唤醒协程（这个被唤醒的协程是之前因为发送不出去被阻塞的协程）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("goready")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" skip"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将数据直接从 sender 复制到 receiver")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 场景：发送到无缓冲的 chan")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("recvDirect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("_type"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("sudog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" dst unsafe"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Pointer"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   src "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("typeBitsBulkBarrier")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uintptr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dst"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uintptr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// dst 是 receiver 栈里保存接收值的地址，src 是 sender 栈里要被发送的值的地址")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("memmove")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("dst"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("size"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br"),t("span",{staticClass:"line-number"},[s._v("141")]),t("br"),t("span",{staticClass:"line-number"},[s._v("142")]),t("br"),t("span",{staticClass:"line-number"},[s._v("143")]),t("br"),t("span",{staticClass:"line-number"},[s._v("144")]),t("br"),t("span",{staticClass:"line-number"},[s._v("145")]),t("br"),t("span",{staticClass:"line-number"},[s._v("146")]),t("br"),t("span",{staticClass:"line-number"},[s._v("147")]),t("br"),t("span",{staticClass:"line-number"},[s._v("148")]),t("br"),t("span",{staticClass:"line-number"},[s._v("149")]),t("br"),t("span",{staticClass:"line-number"},[s._v("150")]),t("br"),t("span",{staticClass:"line-number"},[s._v("151")]),t("br"),t("span",{staticClass:"line-number"},[s._v("152")]),t("br"),t("span",{staticClass:"line-number"},[s._v("153")]),t("br"),t("span",{staticClass:"line-number"},[s._v("154")]),t("br"),t("span",{staticClass:"line-number"},[s._v("155")]),t("br"),t("span",{staticClass:"line-number"},[s._v("156")]),t("br"),t("span",{staticClass:"line-number"},[s._v("157")]),t("br"),t("span",{staticClass:"line-number"},[s._v("158")]),t("br"),t("span",{staticClass:"line-number"},[s._v("159")]),t("br"),t("span",{staticClass:"line-number"},[s._v("160")]),t("br"),t("span",{staticClass:"line-number"},[s._v("161")]),t("br"),t("span",{staticClass:"line-number"},[s._v("162")]),t("br"),t("span",{staticClass:"line-number"},[s._v("163")]),t("br"),t("span",{staticClass:"line-number"},[s._v("164")]),t("br"),t("span",{staticClass:"line-number"},[s._v("165")]),t("br"),t("span",{staticClass:"line-number"},[s._v("166")]),t("br"),t("span",{staticClass:"line-number"},[s._v("167")]),t("br"),t("span",{staticClass:"line-number"},[s._v("168")]),t("br"),t("span",{staticClass:"line-number"},[s._v("169")]),t("br"),t("span",{staticClass:"line-number"},[s._v("170")]),t("br"),t("span",{staticClass:"line-number"},[s._v("171")]),t("br")])]),t("h2",{attrs:{id:"关闭-chan"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关闭-chan"}},[s._v("#")]),s._v(" 关闭 chan")]),s._v(" "),t("p",[t("code",[s._v("chan")]),s._v(" 关闭的过程比较简单，修改 "),t("code",[s._v("closed")]),s._v(" 为 1，然后唤醒发送队列和接收队列里面的 "),t("code",[s._v("g")]),s._v("，如果发送队列有 "),t("code",[s._v("g")]),s._v("，被唤醒之后会 "),t("code",[s._v("panic")]),s._v("，因为不能往一个已经关闭的 "),t("code",[s._v("chan")]),s._v(" 发送数据。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/go/chan-design/9fa30540a0934000ab9a4107a2817d86tplv-k3u1fbpfcp-zoom-in-crop-mark3024000.webp",alt:"chanrecv_4.png"}})]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关闭 chan")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("closechan")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("hchan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 不能关闭 nil chan")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("panic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("plainError")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"close of nil channel"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 开启锁")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("lock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("closed "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// chan 已经关闭，panic，不能重复关闭。释放锁")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("panic")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("plainError")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"close of closed channel"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置 closed 标志")]),s._v("\n   c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("closed "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// gList 用来保存阻塞在 chan 上的 g（链表，包括了 sender 和 receiver）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" glist gList\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放所有等待读取 chan 的协程（解除阻塞状态）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// recvq 队头元素出队")]),s._v("\n      sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("recvq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dequeue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sendq 已经没有元素了")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关闭之后，从 chan 接收到的都是零值")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("typedmemclr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elemtype"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n         sg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("elem "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n      glist"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放所有正在等待写入 chan 的协程（解除阻塞状态，这些协程会 panic）")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sendq 队头元素出队")]),s._v("\n      sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sendq"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("dequeue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" sg "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("nil")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sendq 已经没有元素了")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n      glist"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("push")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放锁")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unlock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("lock"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将所有等待的协程修改为就绪态")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("glist"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("empty")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      gp "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" glist"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("pop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      gp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("schedlink "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// g 状态修改为可运行状态")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("goready")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("gp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br")])]),t("h2",{attrs:{id:"对于实际开发的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对于实际开发的作用"}},[s._v("#")]),s._v(" 对于实际开发的作用")]),s._v(" "),t("p",[s._v("在上一篇文章和本文中，花了很大的篇幅来讲述 "),t("code",[s._v("chan")]),s._v(" 的设计、实现与使用，这么多东西对我们有什么用呢？")]),s._v(" "),t("p",[s._v("其中非常重要的一个作用是，清楚地了解 "),t("code",[s._v("chan")]),s._v(" 的工作机制，便于我们对程序实际运行情况进行分析， 尤其是一些非常隐晦的读写 "),t("code",[s._v("chan")]),s._v(" 场景，毕竟稍有不慎就会导致协程泄漏，这对进程影响可能是非常大的。")]),s._v(" "),t("p",[s._v("比如下面的这种代码：")]),s._v(" "),t("div",{staticClass:"language-go line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-go"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" main\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fmt"')]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"runtime"')]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"time"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Second"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("go")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("func")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 永远阻塞，协程泄漏")]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" ch "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),s._v("\n         ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 我们会看到协程数量逐渐增长。")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 但是这部分挂起的协程永远不会被调度。")]),s._v("\n      fmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"goroutine count: %d\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" runtime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("NumGoroutine")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Hour"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("blockquote",[t("p",[s._v("tips：在 "),t("code",[s._v("chan")]),s._v(" 读写的地方需要注意自己的写法会不会让 goroutine 永远陷入阻塞，或者长时间阻塞。")])]),s._v(" "),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("chan")]),s._v(" 底层是 "),t("code",[s._v("hchan")]),s._v(" 结构体。")])]),s._v(" "),t("li",[t("p",[s._v("go 语法里面的 "),t("code",[s._v("<-")]),s._v(" 不过是语法糖，在编译的时候，会编译成 "),t("code",[s._v("hchan")]),s._v(" 相关的方法调用。最终都会调用 "),t("code",[s._v("chansend")]),s._v(" 或者 "),t("code",[s._v("chanrecv")]),s._v("。"),t("code",[s._v("select...case")]),s._v(" 里面的 "),t("code",[s._v("chan")]),s._v(" 读写最终也会编译为对 "),t("code",[s._v("chansend")]),s._v(" 或 "),t("code",[s._v("chanrecv")]),s._v(" 的调用。")])]),s._v(" "),t("li",[t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("chan\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("总体设计：维护了三个队列：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("hchan.buf")]),s._v(": "),t("code",[s._v("chan")]),s._v(" 中暂存 "),t("code",[s._v("sender")]),s._v(" 发送数据的队列（在有 "),t("code",[s._v("receiver")]),s._v(" 读取的时候会从这个队列中复制到 "),t("code",[s._v("receiver")]),s._v(" 中）")]),s._v(" "),t("li",[t("code",[s._v("hchan.recvq")]),s._v(": 接收队列，存储那些尝试读取 "),t("code",[s._v("channel")]),s._v(" 但被阻塞的 "),t("code",[s._v("goroutine")]),s._v("。")]),s._v(" "),t("li",[t("code",[s._v("hchan.sendq")]),s._v(": 发送队列，存储那些尝试写入 "),t("code",[s._v("channel")]),s._v(" 但被阻塞的 "),t("code",[s._v("goroutine")]),s._v("。")])])]),s._v(" "),t("li",[t("p",[s._v("读写 "),t("code",[s._v("chan")]),s._v(" 的协程阻塞是通过 "),t("code",[s._v("gopark")]),s._v(" 实现的，而从阻塞态转换为可运行状态是通过 "),t("code",[s._v("goready")]),s._v(" 实现的。")])]),s._v(" "),t("li",[t("p",[s._v("在 "),t("code",[s._v("chan")]),s._v(" 读写操作阻塞的时候，如果是在 "),t("code",[s._v("select")]),s._v(" 语句中，则会直接返回（表示当前的分支没有被选中），否则，会调用 "),t("code",[s._v("gopark")]),s._v(" 挂起当前协程。")])]),s._v(" "),t("li",[t("p",[s._v("在关闭 "),t("code",[s._v("chan")]),s._v(" 的时候，会调用 "),t("code",[s._v("goready")]),s._v(" 唤醒阻塞在发送或者接收操作上的 "),t("code",[s._v("g")]),s._v("（协程）。")])]),s._v(" "),t("li",[t("p",[s._v("无缓冲 "),t("code",[s._v("chan")]),s._v(" 的操作有点特殊，对于无缓冲 "),t("code",[s._v("chan")]),s._v("，必须同时有 "),t("code",[s._v("sender")]),s._v(" 和 "),t("code",[s._v("receiver")]),s._v(" 才能发送和接收成功，否则另一边都会陷入阻塞（当然，"),t("code",[s._v("select")]),s._v(" 不会阻塞）。")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);